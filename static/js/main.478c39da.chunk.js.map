{"version":3,"sources":["BeerList/BeerList.js","Search/Search.js","BeerContainer/BeerContainer.js","Favourites/Favourites.js","Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["BeerList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","beers","favBeer","_this2","console","log","axios","get","then","response","data","search","setState","customSearch","i","length","name","toLowerCase","indexOf","push","catch","error","fetchBeers","nextProps","serach","_this3","react_default","a","createElement","map","beer","key","id","onClick","description","src","image_url","alt","Component","Search","query","refreshQuery","bind","assertThisInitialized","event","target","value","type","onChange","className","onSearch","BeerContainer","filter","inputHandler","favBeerHandler","obj","list","containsObject","Storage","sessionStorage","Allbeers","JSON","parse","setItem","stringify","prevState","concat","toConsumableArray","src_Search_Search","src_BeerList_BeerList","Favourites","Navbar","react_router_dom","to","App","src_Navbar_Navbar","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8WA6EeA,cAxEb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAO,GACPC,QAAS,IAJMT,4EAQN,IAAAU,EAAAP,KACXQ,QAAQC,IAAI,aACZC,IACGC,IAAI,mEACJC,KAAK,SAAAC,GACJ,IAAMR,EAAQQ,EAASC,KAGvB,GAA0B,KAAtBP,EAAKX,MAAMmB,OACbP,QAAQC,IAAI,kBACZF,EAAKS,SAAS,CAAEX,MAAOA,QAClB,CACLG,QAAQC,IAAI,sBAGZ,IAFA,IAAIQ,EAAe,GAEVC,EAAI,EAAGA,EAAIb,EAAMc,OAAQD,IAChCV,QAAQC,IAAIJ,EAAMa,KAC8C,IAA5Db,EAAMa,GAAGE,KAAKC,cAAcC,QAAQf,EAAKX,MAAMmB,SACjDE,EAAaM,KAAKlB,EAAMa,IAG5BV,QAAQC,IAAIQ,GACZV,EAAKS,SAAS,CAAEX,MAAOY,IAEzBT,QAAQC,IAAIF,EAAKH,MAAMC,SAExBmB,MAAM,SAAAC,kDAMTzB,KAAK0B,+DAGmBC,GACpB3B,KAAKJ,MAAMgC,SAAWD,EAAUZ,SAClCP,QAAQC,IAAI,iCACZT,KAAK0B,+CAIA,IAAAG,EAAA7B,KACHK,EAAQ,kDAiBZ,OAfIL,KAAKI,MAAMC,MAAMc,OAAS,IAC5Bd,EACEyB,EAAAC,EAAAC,cAAA,UACGhC,KAAKI,MAAMC,MAAM4B,IAAI,SAAAC,GACpB,OACEJ,EAAAC,EAAAC,cAAA,MAAIG,IAAKD,EAAKE,GAAIC,QAAS,kBAAIR,EAAKjC,MAAMU,QAAQ4B,KAChDJ,EAAAC,EAAAC,cAAA,UAAKE,EAAKd,MACVU,EAAAC,EAAAC,cAAA,UAAKE,EAAKI,aACVR,EAAAC,EAAAC,cAAA,OAAKO,IAAKL,EAAKM,UAAWC,IAAI,YAOnCX,EAAAC,EAAAC,cAAA,WAAM3B,UArEMqC,aCyBRC,qBAzBb,SAAAA,EAAY/C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,IACjB9C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,KAAAH,KAAMJ,KACDQ,MAAQ,CACXwC,MAAO,IAGT/C,EAAKgD,aAAahD,EAAKgD,aAAaC,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAD,KANDA,4EASNmD,GACTxC,QAAQC,IAAIuC,EAAMC,OAAOC,OACzBlD,KAAKgB,SAAS,CAAC4B,MAAMI,EAAMC,OAAOC,yCAG7B,IAAA3C,EAAAP,KACP,OACI8B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,OAAOC,SAAWpD,KAAK6C,eACnCf,EAAAC,EAAAC,cAAA,UAAQmB,KAAK,SAASE,UAAU,MAAMhB,QAAU,WAAK9B,EAAKX,MAAM0D,SAAS/C,EAAKH,MAAMwC,SAApF,kBApBaF,cCiENa,cA7Db,SAAAA,IAAc,IAAA1D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACZ1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,QAKFI,MAAQ,CACNoD,OAAQ,GACRlD,QAAS,IANTT,EAAK4D,aAAe5D,EAAK4D,aAAaX,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAD,KACpBA,EAAK6D,eAAiB7D,EAAK6D,eAAeZ,KAApBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAAD,KAHVA,4EAWD2D,GACXhD,QAAQC,IAAI,kBAAmB+C,GAC/BxD,KAAKgB,SAAS,CAAEwC,OAAQA,2CAGXG,EAAKC,GAClB,IAAI1C,EACJ,IAAKA,EAAI,EAAGA,EAAI0C,EAAKzC,OAAQD,IAC3B,GAAI0C,EAAK1C,KAAOyC,EACd,OAAO,EAIX,OAAO,yCAGMzB,GACb,IAAsD,IAAlDlC,KAAK6D,eAAe3B,EAAMlC,KAAKI,MAAME,SACvCE,QAAQC,IAAI,4BACP,CACL,GAAuB,qBAAZqD,QACT,GAAIC,eAAezD,QAAS,CAC1B,IAAI0D,EAAWC,KAAKC,MAAMH,eAAezD,SACzC0D,EAASzC,KAAKW,GACd6B,eAAeI,QAAQ,UAAWF,KAAKG,UAAUJ,QAC5C,CACL,IAAIA,EAAW,GACfA,EAASzC,KAAKW,GACd6B,eAAeI,QAAQ,UAAWF,KAAKG,UAAUJ,IAGrDxD,QAAQC,IAAI,eACZT,KAAKgB,SAAS,SAAAqD,GAAS,MAAK,CAC1B/D,QAAO,GAAAgE,OAAAxE,OAAAyE,EAAA,EAAAzE,CAAMuE,EAAU/D,SAAhB,CAAyB4B,yCAMpC,OACIJ,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,OAEbvB,EAAAC,EAAAC,cAACwC,EAAD,CAAQlB,SAAUtD,KAAKyD,eACvB3B,EAAAC,EAAAC,cAACyC,EAAD,CAAU1D,OAAQf,KAAKI,MAAMoD,OAAQlD,QAASN,KAAK0D,yBAxDjChB,aC0CbgC,cA1CX,SAAAA,EAAY9E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,IACnB7E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,KAAMJ,KACDQ,MAAQ,CACXE,QAAS,IAHQT,mFASnB,GAAuB,qBAAZiE,SACLC,eAAezD,QAAS,CAC1B,IAAI0D,EAAWC,KAAKC,MAAMH,eAAezD,SAKzCN,KAAKgB,SAAS,CAACV,QAAQ0D,sCAM3B,IAAI3D,EAAQ,kDAgBZ,OAfAG,QAAQC,IAAIT,KAAKI,MAAME,QAAQa,QAC3BnB,KAAKI,MAAME,QAAQa,OAAS,IAC9Bd,EACEyB,EAAAC,EAAAC,cAAA,UACGhC,KAAKI,MAAME,QAAQ2B,IAAI,SAAAC,GACtB,OAAQJ,EAAAC,EAAAC,cAAA,MAAIG,IAAKD,EAAKE,IAClBN,EAAAC,EAAAC,cAAA,UAAKE,EAAKd,MACVU,EAAAC,EAAAC,cAAA,UAAKE,EAAKI,aACVR,EAAAC,EAAAC,cAAA,OAAKO,IAAKL,EAAKM,UAAWC,IAAI,YAOnCX,EAAAC,EAAAC,cAAA,WAAM3B,UAxCQqC,6BCgBViC,0LAXX,OACI7C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAMC,GAAG,KAAT,SACJ/C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAMC,GAAG,QAAT,uBATKnC,cCoBNoC,mLAZX,OACEhD,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,OACfvB,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW5B,IACjCzB,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAOC,KAAK,OAAOE,UAAWT,aATpBhC,aCKE0C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpF,KAAK,SAAAqF,GACjCA,EAAaC","file":"static/js/main.478c39da.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./BeerList.css\";\nimport axios from \"axios\";\n\nclass BeerList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beers: [],\n      favBeer: []\n    };\n  }\n\n  fetchBeers() {\n    console.log(\"props ref\");\n    axios\n      .get(\"https://api.punkapi.com/v2/beers?brewed_before=11-2012&abv_gt=6\")\n      .then(response => {\n        const beers = response.data;\n        // console.log(beers);\n\n        if (this.props.search === \"\") {\n          console.log(\"search is null\");\n          this.setState({ beers: beers });\n        } else {\n          console.log(\"search is not null\");\n          let customSearch = [];\n\n          for (let i = 0; i < beers.length; i++) {\n            console.log(beers[i]);\n            if (beers[i].name.toLowerCase().indexOf(this.props.search) !== -1) {\n              customSearch.push(beers[i]);\n            }\n          }\n          console.log(customSearch);\n          this.setState({ beers: customSearch });\n        }\n        console.log(this.state.beers);\n      })\n      .catch(error => {\n        // this.setState( { error: true } );\n      });\n  }\n\n  componentDidMount() {\n    this.fetchBeers();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.serach !== nextProps.search) {\n      console.log(\"rec new props so will uppdate\");\n      this.fetchBeers();\n    }\n  }\n\n  render() {\n    let beers = \"No beers Available Right now. Please come later\";\n    \n    if (this.state.beers.length > 0) {\n      beers = (\n        <ul>\n          {this.state.beers.map(beer => {\n            return (\n              <li key={beer.id} onClick={()=>this.props.favBeer(beer)}>\n                <h1>{beer.name}</h1>\n                <h4>{beer.description}</h4>\n                <img src={beer.image_url} alt=\"NA\" />\n              </li>\n            );\n          })}\n        </ul>\n      );\n    }\n    return <div>{beers}</div>;\n  }\n}\n\nexport default BeerList;\n","import React, { Component } from \"react\";\nimport \"./Search.css\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: ''\n    };\n\n    this.refreshQuery=this.refreshQuery.bind(this);\n  }\n\n  refreshQuery(event){\n      console.log(event.target.value);\n      this.setState({query:event.target.value});\n  }\n\n  render() {\n    return (\n        <div>\n        <p>Search</p>\n        <input type=\"text\" onChange ={this.refreshQuery}/>\n        <button type=\"button\" className=\"btn\" onClick= {()=>{this.props.onSearch(this.state.query)} } >Search</button>\n        </div>\n      )\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport BeerList from \"../BeerList/BeerList\";\nimport Search from \"../Search/Search\";\n\n\nclass BeerContainer extends Component {\n\n  constructor() {\n    super();\n    this.inputHandler = this.inputHandler.bind(this);\n    this.favBeerHandler = this.favBeerHandler.bind(this);\n  }\n\n  state = {\n    filter: \"\",\n    favBeer: []\n  };\n\n  inputHandler(filter) {\n    console.log(\"searched the fo\", filter);\n    this.setState({ filter: filter });\n  }\n\n  containsObject(obj, list) {\n    var i;\n    for (i = 0; i < list.length; i++) {\n      if (list[i] === obj) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  favBeerHandler(beer) {\n    if (this.containsObject(beer, this.state.favBeer) === true) {\n      console.log(\"will remove from fav\");\n    } else {\n      if (typeof Storage !== \"undefined\") {\n        if (sessionStorage.favBeer) {\n          let Allbeers = JSON.parse(sessionStorage.favBeer);\n          Allbeers.push(beer);\n          sessionStorage.setItem(\"favBeer\", JSON.stringify(Allbeers));\n        } else {\n          let Allbeers = [];\n          Allbeers.push(beer);\n          sessionStorage.setItem(\"favBeer\", JSON.stringify(Allbeers));\n        }\n      }\n      console.log(\"inside else\");\n      this.setState(prevState => ({\n        favBeer: [...prevState.favBeer, beer]\n      }));\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          \n          <Search onSearch={this.inputHandler} />\n          <BeerList search={this.state.filter} favBeer={this.favBeerHandler} />\n        </div>\n      \n    );\n  }\n}\n\nexport default BeerContainer;\n","import React, { Component } from \"react\";\n\n\nclass Favourites extends Component {\n\n    constructor(props) {\n    super(props);\n    this.state = {\n      favBeer: []\n    };\n  }\n\n  componentDidMount() {\n\n    if (typeof Storage !== \"undefined\") {\n      if (sessionStorage.favBeer) {\n        let Allbeers = JSON.parse(sessionStorage.favBeer);\n        // console.log(Allbeers);\n        // this.setState(prevState => ({\n        //   favBeer: [...prevState.favBeer, Allbeers]\n        // }));\n        this.setState({favBeer:Allbeers});\n      }\n    }\n  }\n\n  render() {\n    let beers = \"No beers Available Right now. Please come later\";\n    console.log(this.state.favBeer.length);\n    if (this.state.favBeer.length > 0) {\n      beers = (\n        <ul>\n          {this.state.favBeer.map(beer => {\n            return (<li key={beer.id}>\n                <h1>{beer.name}</h1>\n                <h4>{beer.description}</h4>\n                <img src={beer.image_url} alt=\"NA\" />\n              </li>\n            );\n          })}\n        </ul>\n      );\n    }\n    return <div>{beers}</div>;\n  }\n}\n\nexport default Favourites;\n","import React, { Component } from \"react\";\nimport \"./Navbar.css\";\nimport { Link } from 'react-router-dom';\nclass Navbar extends Component {\n\n\n\n  render() {\n    return(\n        <div>\n        <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/fav\">Favourite</Link></li>\n        </ul>\n        </div>\n    ) \n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport BeerContainer from './BeerContainer/BeerContainer';\nimport Favourites from './Favourites/Favourites';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Route}  from 'react-router-dom';\nimport Navbar from \"./Navbar/Navbar\";\nclass App extends Component {\n  \n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n        <Navbar />\n        <Route path=\"/\" exact component={BeerContainer} />\n        <Route path=\"/fav\" component={Favourites} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}