{"version":3,"sources":["/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/$_lazy_route_resource lazy","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/app-routing.module.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/app.component.css","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/app.component.html","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/app.component.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/app.module.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/dynamic-form-question/dynamic-form-question.component.html","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/dynamic-form-question/dynamic-form-question.component.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/dynamic-form/dynamic-form.component.html","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/dynamic-form/dynamic-form.component.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/home/home.component.css","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/home/home.component.html","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/home/home.component.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/modals/question-base.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/modals/question-checkbox.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/modals/question-int.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/modals/question-text.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/product-insert-screen/product-insert-screen.component.css","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/product-insert-screen/product-insert-screen.component.html","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/product-insert-screen/product-insert-screen.component.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/services/auth.guard.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/services/question-control.service.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/services/question.service.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/services/rest-handler.service.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/environments/environment.ts","/Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { ProductInsertScreenComponent } from './product-insert-screen/product-insert-screen.component';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './services/auth.guard';\n\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent },\n    { path: 'product', component: ProductInsertScreenComponent , canActivate:[AuthGuard]}\n  ];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { QuestionService } from './services/question.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/app.component.ts","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { ProductInsertScreenComponent } from \"./product-insert-screen/product-insert-screen.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { RestHandlerService } from \"./services/rest-handler.service\";\nimport { DynamicFormComponent } from \"./dynamic-form/dynamic-form.component\";\nimport { DynamicFormQuestionComponent } from \"./dynamic-form-question/dynamic-form-question.component\";\nimport { QuestionService } from \"./services/question.service\";\nimport { AuthGuard } from \"./services/auth.guard\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductInsertScreenComponent,\n    HomeComponent,\n    DynamicFormComponent,\n    DynamicFormQuestionComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [RestHandlerService, QuestionService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/app.module.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n        <div [formGroup]=\\\"form\\\" class=\\\"form-group\\\">\\n            <label [attr.for]=\\\"question.key\\\">{{ question.label }}</label>\\n          \\n            <div [ngSwitch]=\\\"question.controlType\\\">\\n              <input\\n                *ngSwitchCase=\\\"'textbox'\\\"\\n                [formControlName]=\\\"question.key\\\"\\n                [id]=\\\"question.key\\\"\\n                [type]=\\\"question.type\\\"\\n                class=\\\"form-control\\\"\\n              />\\n          \\n              <input\\n                *ngSwitchCase=\\\"'number'\\\"\\n                [formControlName]=\\\"question.key\\\"\\n                [id]=\\\"question.key\\\"\\n                type=\\\"number\\\"\\n                class=\\\"form-control\\\"\\n              />\\n          \\n              <input\\n                *ngSwitchCase=\\\"'checkbox'\\\"\\n                [formControlName]=\\\"question.key\\\"\\n                [id]=\\\"question.key\\\"\\n                [type]=\\\"question.type\\\"\\n                [checked]=\\\"question.checked\\\"\\n                class=\\\"form-control\\\"\\n              />\\n            </div>\\n          \\n            <div class=\\\"errorMessage\\\" *ngIf=\\\"!isValid\\\">\\n              {{ question.validationMessage }}\\n            </div>\\n          </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/dynamic-form-question/dynamic-form-question.component.html\n// module id = ../../../../../src/app/dynamic-form-question/dynamic-form-question.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\nimport { FormGroup }        from '@angular/forms';\n\nimport { QuestionBase }     from '../modals/question-base';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './dynamic-form-question.component.html'\n})\nexport class DynamicFormQuestionComponent {\n  @Input() question: QuestionBase<any>;\n  @Input() form: FormGroup;\n  get isValid() { return (this.form.controls[this.question.key].dirty==true)? (this.form.controls[this.question.key].valid):true }\n  // get isValid() {  return this.form.controls[this.question.key].valid;  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/dynamic-form-question/dynamic-form-question.component.ts","module.exports = \"<div>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\">\\n  \\n      <div *ngFor=\\\"let question of questions\\\" class=\\\"form-row\\\">\\n        <app-question [question]=\\\"question\\\" [form]=\\\"form\\\"></app-question>\\n      </div>\\n  \\n      <div class=\\\"form-row\\\">\\n        <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Save</button>\\n      </div>\\n    </form>\\n  \\n    <div *ngIf=\\\"payLoad\\\" class=\\\"form-row\\\">\\n      <strong>Saved the following values</strong><br>{{payLoad}}\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/dynamic-form/dynamic-form.component.html\n// module id = ../../../../../src/app/dynamic-form/dynamic-form.component.html\n// module chunks = main","import { Component, Input, OnInit }  from '@angular/core';\nimport { FormGroup }                 from '@angular/forms';\n\nimport { QuestionBase }              from '../modals/question-base';\nimport { QuestionControlService }    from '../services/question-control.service';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  providers: [ QuestionControlService ]\n})\nexport class DynamicFormComponent implements OnInit {\n\n  @Input() questions: QuestionBase<any>[] = [];\n  form: FormGroup;\n  payLoad = '';\n\n  constructor(private qcs: QuestionControlService) {  }\n\n  ngOnInit() {\n    this.form = this.qcs.toFormGroup(this.questions);\n  }\n\n  onSubmit() {\n    console.log(this.form);\n    this.payLoad = JSON.stringify(this.form.value);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/dynamic-form/dynamic-form.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Ecommerce</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n        <div *ngFor=\\\"let item of ProductList\\\">\\n            <h2>{{item.name}}</h2>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"fetchDefinition(item.definitionUrl)\\\">Add {{item.name}}</button>\\n          </div>\\n    </div>\\n  </div>\\n</div>\\n \\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { RestHandlerService } from \"./../services/rest-handler.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.css\"]\n})\nexport class HomeComponent implements OnInit {\n  ProductList: any = [];\n\n  constructor(private _rh: RestHandlerService, private router: Router) {}\n\n  ngOnInit() {\n    this._rh.getProductList().subscribe(\n      data => {\n        this.ProductList = data;\n      },\n      err => {\n        //handle error\n        console.log(err);\n      }\n    );\n  }\n\n  fetchDefinition(url) {\n    this._rh.getDefinationUrl(url).subscribe(\n      data => {\n        this._rh.setDefination(data);\n\n        this.router.navigate([\"/product\"]);\n      },\n      err => {\n        //handle error\n        console.log(err);\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/home/home.component.ts","export class QuestionBase<T> {\n    public value: T;\n    key: string;\n    label: string;\n    required: boolean;\n    order: number;\n    controlType: string;\n    validationMessage:string;\n  \n    constructor(options: {\n        value?: T,\n        key?: string,\n        label?: string,\n        required?: boolean,\n        order?: number,\n        controlType?: string,\n        validationMessage?: string\n      } = {}) {\n      this.value = options.value;\n      this.key = options.key || '';\n      this.label = options.label || '';\n      this.required = !!options.required;\n      this.order = options.order === undefined ? 1 : options.order;\n      this.controlType = options.controlType || '';\n      \n      if(this.required==true){\n        this.validationMessage= options.validationMessage || '';\n      }\n    }\n  }\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/modals/question-base.ts","import { QuestionBase } from './question-base';\n\nexport class CheckboxQuestion extends QuestionBase<string> {\n  controlType = 'checkbox';\n  type: string;\n  checked: boolean;\n\n  constructor(options: any = {}) {\n    super(options);\n    this.type = 'checkbox';\n    this.checked = (options.value=='False')? false: true;\n    this.value = this.checked.toString();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/modals/question-checkbox.ts","import { QuestionBase } from './question-base';\n\nexport class NumberboxQuestion extends QuestionBase<Number> {\n  controlType = 'number';\n  type: string='number';\n\n  constructor(options: {} = {}) {\n    super(options);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/modals/question-int.ts","import { QuestionBase } from './question-base';\n\nexport class TextboxQuestion extends QuestionBase<string> {\n  controlType = 'textbox';\n  type: string;\n\n  constructor(options: {} = {}) {\n    super(options);\n    this.type = options['type'] || '';\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/modals/question-text.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/product-insert-screen/product-insert-screen.component.css\n// module id = ../../../../../src/app/product-insert-screen/product-insert-screen.component.css\n// module chunks = main","module.exports = \"<h2>Add Product</h2>\\n<app-dynamic-form  [questions]=\\\"questions\\\"></app-dynamic-form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/product-insert-screen/product-insert-screen.component.html\n// module id = ../../../../../src/app/product-insert-screen/product-insert-screen.component.html\n// module chunks = main","import { Component, OnInit } from \"@angular/core\";\nimport { RestHandlerService } from \"../services/rest-handler.service\";\nimport { QuestionService } from \"../services/question.service\";\nimport { TextboxQuestion } from \"../modals/question-text\";\nimport { CheckboxQuestion } from \"../modals/question-checkbox\";\nimport { NumberboxQuestion } from \"../modals/question-int\";\n\n@Component({\n  selector: \"app-product-insert-screen\",\n  templateUrl: \"./product-insert-screen.component.html\",\n  styleUrls: [\"./product-insert-screen.component.css\"]\n})\nexport class ProductInsertScreenComponent implements OnInit {\n\n  definition: any;\n  questions: any[]=[];\n\n  constructor(private _rh: RestHandlerService, private _qs: QuestionService) {}\n\n  ngOnInit() {\n    \n    this.definition = this._rh.getDefinition();\n\n    for (let def of this.definition) {\n\n      if (def.type == \"text\") {\n        this.questions.push(\n          new TextboxQuestion({\n            key: def.caption,\n            label: def.caption,\n            value: def.defaultValue,\n            required: def.mandatory,\n            validationMessage:def.validationMessage\n          })\n        );\n      }\n\n      if (def.type == \"int\") {\n        this.questions.push(\n          new NumberboxQuestion({\n            key: def.caption,\n            label: def.caption,\n            value: def.defaultValue,\n            required: def.mandatory,\n            validationMessage:def.validationMessage\n          })\n        );\n      }\n\n      if (def.type == \"bool\") {\n        this.questions.push(\n          new CheckboxQuestion({\n            key: def.caption,\n            label: def.caption,\n            value: def.defaultValue,\n            required: def.mandatory,\n            validationMessage:def.validationMessage\n          })\n        );\n      }\n\n    }\n    this._qs.setQuestions(this.questions);\n    this.questions = this._qs.getQuestions();\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/product-insert-screen/product-insert-screen.component.ts","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from \"@angular/router\";\nimport { Observable } from \"rxjs/Observable\";\n\nimport { Router } from \"@angular/router\";\nimport { RestHandlerService } from \"./rest-handler.service\";\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private _rh: RestHandlerService, private myRoute: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    let val = this._rh.getDefinition();\n    if (val && val != []) {\n      return true;\n    } else {\n      this.myRoute.navigate([\"/\"]);\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/services/auth.guard.ts","import { Injectable }   from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { QuestionBase } from '../modals/question-base';\n\n@Injectable()\nexport class QuestionControlService {\n  constructor() { }\n\n  toFormGroup(questions: QuestionBase<any>[] ) {\n    let group: any = {};\n\n    questions.forEach(question => {\n      group[question.key] = question.required ? new FormControl(question.value || '', Validators.required)\n                                              : new FormControl(question.value || '');\n    });\n    return new FormGroup(group);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/services/question-control.service.ts","import { Injectable } from \"@angular/core\";\n\nimport { QuestionBase } from \"../modals/question-base\";\nimport { TextboxQuestion } from \"../modals/question-text\";\nimport { CheckboxQuestion } from \"../modals/question-checkbox\";\n\n@Injectable()\nexport class QuestionService {\n  questions: QuestionBase<any>[] = [];\n  getQuestions() {\n    return this.questions;\n  }\n\n  setQuestions(obj) {\n    this.questions = obj;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/services/question.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class RestHandlerService {\n  definition: any;\n\n  constructor(private http: HttpClient) { }\n\n  getProductList(){\n    return this.http.get(environment.apiUrl+'/products');\n  }\n\n  getDefinationUrl(url){\n    return this.http.get(url);\n  }\n\n  setDefination(obj){\n    this.definition = obj;\n  }\n\n  getDefinition(){\n    return this.definition;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/app/services/rest-handler.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'https://ds-ecom.azurewebsites.net'\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/sharangmalhotra/Desktop/Angulartask/angular-app/src/main.ts"],"sourceRoot":"webpack:///"}